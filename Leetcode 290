"""Leetcode 290: Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s. Specifically:

Each letter in pattern maps to exactly one unique word in s.
Each unique word in s maps to exactly one letter in pattern.
No two letters map to the same word, and no two words map to the same letter. """

class Solution(object):
    def wordPattern(self, pattern, s):
        """
        :type pattern: str
        :type s: str
        :rtype: bool
        """
        split = s.split()
        hashmap_s = {}
        hashmap_p = {}
        if len(pattern) != len(split):
            return False

        for i in range(len(pattern)):
            if hashmap_p.get(pattern[i],split[i]) != split[i] or hashmap_s.get(split[i],pattern[i]) != pattern[i]:
                return False
            hashmap_p[pattern[i]] = split[i]
            hashmap_s[split[i]] = pattern[i]
        return True
